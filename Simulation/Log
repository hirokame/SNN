2020/12/08
Ctx: sin波*0.9+random*0.1
Str: Resonant 10 / 振幅sin**7
Ctx 10-30 / Str 10 / GPe 10 / SNr 10 / Weight 10-30
Cotexの入力に支配的すぎる。もう少しresonantを増やして発火率を抑える。

2020/12/09
Ctx: sin波*0.8+random*0.2に変更
Str: Resonant 15 に変更
Ctx 6-8 / Str 5-7 / GPe 8-10 / SNr 6-8 / Weight 5-10

2020/12/10
前日のがとまっていたミス、やり直し。

2020/12/12
Striatumが6-7だといい感じ。Strの発火率に波の生成がかなり依存している(当たり前か)
Resonant 18に変更
Ctx 6-8 / Str 5-8 / GPe 8,10 / SNr 6,8 / Weight 6,8,10,12
6-6-10-6-10あたりが面白い。dop0だと最初はバラバラでだんだんピークが立ってくる。

2020/12/13
Ctx 6,7 / Str 6,7(0.1刻み) / GPe 10 / SNr 8 / Weight 6,8(0.1刻み)

2020/12/18
LIF_striatum_resonant作成
・膜電位をresonateさせる
・周期のπを過ぎたらリセット可能
・f(v)の関数を少し変更(-v　→　-v-65))
Ctx 6,7 / Str 6,7(0.1刻み) / GPe 10 / SNr 8 / Weight 6,8(0.1刻み)
Striatumがほとんど活動せず。

2020/12/21
Ctxへの入力の入れ方をsin > 0.95の時N(1,0.3)*0.8+N(1,1)*0.2で、それ以外の時N(1,1)*0.2　というInputに変更。
Ctxの発火が安定した。

resonateの減衰を500msにしたら一瞬で発火が消えた。しばらく1000のままで行なう。
Ctx 7-10 / Str20-29 / GPe 7 / SNr 6 / Weight 5-9

Ctx 8 / Str 25 で止まってしまった。
2Hzはすぐに消えるが、4Hzのresonateが生き残ってしまう。原理上3Hzの入力がやってくるのは4Hzの２π/３地点だからcos=-0.5くらいのはず、なぜうまく行かないのか。

2020/12/22
4Hzが4Hzのタイミングで発火し続けているということは、Strの自然発火頻度が高すぎる？？
・Strの発火率を15-20まで下げる
・weightを上方修正する
・resonateのthrsを下げてみる

Ctxへの入力をsin>0.9に変更
resonateのthrsを10に変更
Ctx 8-10 / Str 15-20 / GPe 7 / SNr 6 / Weight 10-20(2刻み)

４Hzが勝ってしまう、解決案
・開始の位相をずらす(+0.5πくらい)
・本物のresonate and fireにする(今はマイナスのときに入力が来たらマイナスに振り切れるようになっているが、ちゃんと円で考える)

2020/12/23
self.theta = -0.5*pi
Ctx 8-10 / Str 15-20 / GPe 7 / SNr 6 / Weight 10-20(2刻み)

ちゃんと3Hzが勝った。
Weightが大きすぎると(18~)Strの発火が尻すぼみになっていく。
d1とd2で違いがないのが問題。d0では勝たないようにしなければ。
SNrの活動がキー？？→少し値をふってみるか？

2020/12/24
4000はCtxに周期的なInput。残り4000はランダムな周期をいれる。
Ctx 8,10 / Str 14,16,18 / GPe 7,9 / SNr 6,8,10 / Weight 10,12,14(2刻み)

3Hzが勝ってランダム後も残っている。
つぎはDopamineのある無しで持続性に違いがあるか。

12/27
ドーパミンのインデックスが間違っていた、修正。
Dop0のほうが直接路でDop1のほうが間接路。
SNr-Ctxのウェイトを2倍にして同じパラメタで回してみる。SNrの活動によりCtxが反応してうまく抑制されてしまうかどうか。

特に変化なし。Ctx10,Str16以降が止まっていたのでrerun.

12/30
resonateの周期を倍にしてみる。
Ctx10 / Str16,18,25 / GPe 9 / SNr 5,10,15,20 / Weight 10,15,20,25
